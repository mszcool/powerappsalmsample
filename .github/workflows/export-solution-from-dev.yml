name: export-engineering-communities-solution-from-dev

# This exports the engineering communities sample from the development environment
# and unpacks the solution into it pieces in this repository.

on:
  workflow_dispatch:
    inputs:
      # This will be updated to your solution name and description
      solution_name:
        description: 'Name of the PowerPlatform solution you want to export:'
        required: true
        default: EngineeringCommunities
      # Do Not change these values
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder:
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: solutions/
       
env:
  ENVIRONMENT_URL: ${{ secrets.POWERPLAT_SOURCE_ENV }}
  USERNAME: ${{ secrets.POWERPLAT_ALM_APP_ID }}
  TENANT_ID: ${{ secrets.POWERPLAT_ALM_APP_TENANTID }}
  
jobs:
  export-from-source-env:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1
    
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    
    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@0.4.0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        user-name: ${{env.USERNAME}}
        password-secret: ${{ secrets.POWERPLAT_ALM_APP_SECRET }}
        tenant-id: ${{env.TENANT_ID}}
        
    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@0.4.0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        user-name: ${{env.USERNAME}}
        password-secret: ${{ secrets.POWERPLAT_ALM_APP_SECRET }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder }}/${{ github.event.inputs.solution_name }}.zip
        
    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@0.4.0
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-type: 'Unmanaged'
        overwrite-files: true

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@0.4.0
      with:
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true
