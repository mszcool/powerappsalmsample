name: import-solution-to-test-on-release.yml

# This imports the solution into a build environment, checks the solution
# and only if the check succeeds without issues, it will allow merging into main.

on:
  push:
    branches:
      - dogfood

env:
  solution_name: EngineeringCommunities
  solution_shipping_folder: out/ship
  solution_outbound_folder: out/solutions
  solution_source_folder: solutions
  solution_release_folder: out/release
  BUILD_ENVIRONMENT_URL: ${{ secrets.POWERPLAT_ALM_BUILDENV }}
  DOGFOOD_ENVIRONMENT_URL: ${{ secrets.POWERPLAT_ALM_TESTENV }}
  CLIENT_ID: ${{ secrets.POWERPLAT_ALM_APP_ID }}
  TENANT_ID: ${{ secrets.POWERPLAT_ALM_APP_TENANTID }}

jobs:
  package-on-build-as-managed:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1
    
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    
    - name: pack solution
      uses: microsoft/powerplatform-actions/pack-solution@0.5.2
      with:
        solution-folder: ${{ env.solution_source_folder}}/${{ env.solution_name }}
        solution-file: ${{ env.solution_outbound_folder}}/${{ env.solution_name }}.zip
        solution-type: Unmanaged

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@0.5.2
      with:
        environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.POWERPLAT_ALM_APP_SECRET }}
        tenant-id: ${{env.TENANT_ID}}

    - name: import solution in build environment for validation
      uses: microsoft/powerplatform-actions/import-solution@0.5.2
      with:
        environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.POWERPLAT_ALM_APP_SECRET }}
        tenant-id: ${{env.TENANT_ID}}
        solution-file: ${{ env.solution_outbound_folder }}/${{ env.solution_name }}.zip
        force-overwrite: true
        publish-changes: true

    - name: export solution as managed solution
      uses: microsoft/powerplatform-actions/export-solution@0.5.2
      with:
        environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.POWERPLAT_ALM_APP_SECRET }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ env.solution_name }}
        managed: true
        solution-output-file: ${{ env.solution_shipping_folder }}/${{ env.solution_name }}.zip

    - name: upload to releases artifacts
      uses: actions/upload-artifact@v2
      with:
        name: managedSolutions
        path: ${{ env.solution_shipping_folder }}/${{ env.solution_name }}.zip

  publish-to-test:
    needs: [package-on-build-as-managed]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: get managed solution from artifacts store
      uses: actions/download-artifact@v2
      with:
        name: managedSolutions
        path: ${{ env.solution_release_folder }}

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@0.5.2
      with:
        environment-url: ${{env.DOGFOOD_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.POWERPLAT_ALM_APP_SECRET }}
        tenant-id: ${{env.TENANT_ID}}

    - name: import into dogfood environment
      uses: microsoft/powerplatform-actions/import-solution@0.5.2
      with:
        environment-url: ${{env.DOGFOOD_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.POWERPLAT_ALM_APP_SECRET }}
        tenant-id: ${{env.TENANT_ID}}
        solution-file: ${{ env.solution_release_folder }}/${{ env.solution_name }}.zip
        force-overwrite: true
        publish-changes: true