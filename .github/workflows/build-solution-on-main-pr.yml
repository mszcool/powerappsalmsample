name: import-solution-to-test.yml

# This imports the solution into a build environment, checks the solution
# and only if the check succeeds without issues, it will allow merging into main.

on:
  pull_request:
    types: [ opened, edited, synchronize ]
    branches:
      - main

env:
  solution_name: EngineeringCommunities
  solution_shipping_folder: out/ship/
  solution_outbound_folder: out/solutions/
  solution_source_folder: solutions/
  solution_release_folder: out/release
  BUILD_ENVIRONMENT_URL: ${{ secrets.POWERPLAT_ALM_BUILDENV }}
  CLIENT_ID: ${{ secrets.POWERPLAT_ALM_APP_ID }}
  TENANT_ID: ${{ secrets.POWERPLAT_ALM_APP_TENANTID }}

jobs:
  import-and-check-solution:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1
    
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    
    - name: pack solution
      uses: microsoft/powerplatform-actions/pack-solution@0.4.0
      with:
        solution-folder: ${{ env.solution_source_folder}}/${{ env.solution_name }}
        solution-file: ${{ env.solution_outbound_folder}}/${{ env.solution_name }}.zip
        solution-type: Unmanaged

    - name: check solution after imported in environment
      uses: microsoft/powerplatform-actions/check-solution@0.4.0
      with:
        environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.POWERPLAT_ALM_APP_SECRET }}
        tenant-id: ${{env.TENANT_ID}}
        path: ${{ env.solution_outbound_folder}}/${{ env.solution_name }}.zip

    - name: import solution in build environment for validation
      uses: microsoft/powerplatform-actions/import-solution@0.4.0
      with:
        environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.POWERPLAT_ALM_APP_SECRET }}
        tenant-id: ${{env.TENANT_ID}}
        solution-file: ${{ env.solution_outbound_folder}}/${{ env.solution_name }}.zip
        force-overwrite: true
        publish-changes: true