name: import-solution-to-test.yml

# This imports the solution into a build environment, checks the solution
# and only if the check succeeds without issues, it will allow merging into main.

on:
  pull_request:
    types: [ opened, edited, synchronize ]
    branches:
      - main

env:
  solution_name: EngineeringCommunities
  solution_shipping_folder: out/ship/
  solution_outbound_folder: out/solutions/
  solution_source_folder: solutions/
  solution_release_folder: out/release
  BUILD_ENVIRONMENT_URL: ${{ secrets.POWERPLAT_ALM_BUILDENV }}
  CLIENT_ID: ${{ secrets.POWERPLAT_ALM_APP_ID }}
  TENANT_ID: ${{ secrets.POWERPLAT_ALM_APP_TENANTID }}

jobs:
  import-and-check-solution:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1
    
    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
    
    - name: pack solution
      uses: microsoft/powerplatform-actions/pack-solution@0.4.0
      with:
        solution-folder: ${{ env.solution_source_folder}}/${{ env.solution_name }}
        solution-file: ${{ env.solution_outbound_folder}}/${{ env.solution_name }}.zip
        solution-type: Unmanaged

    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@0.4.0
      with:
        environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.POWERPLAT_ALM_APP_SECRET }}
        tenant-id: ${{env.TENANT_ID}}

    # - name: check solution after imported in environment
    #   uses: microsoft/powerplatform-actions/check-solution@0.4.0
    #   with:
    #     environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
    #     app-id: ${{env.CLIENT_ID}}
    #     client-secret: ${{ secrets.POWERPLAT_ALM_APP_SECRET }}
    #     tenant-id: ${{env.TENANT_ID}}
    #     geo: 'europe'
    #     path: ${{env.solution_outbound_folder}}/${{env.solution_name }}.zip

    - name: check solution using PowerPlatform CLI
      uses: Amadevus/pwsh-script@v2
      id: paccheckscript
      env:
        environmenturl: ${{env.BUILD_ENVIRONMENT_URL}}
        appid: ${{env.CLIENT_ID}}
        clientsecret: ${{ secrets.POWERPLAT_ALM_APP_SECRET }}
        tenantid: ${{env.TENANT_ID}}
        slnpath: ${{env.solution_outbound_folder}}/${{env.solution_name }}.zip
      with:
        script: |
          Install-Package Microsoft.PowerApps.CLI -RequiredVersion 1.12.2 -Force
          $env:path = "$env:PATH;C:\Program Files\PackageManagement\NuGet\Packages\Microsoft.PowerApps.CLI.1.12.2\tools\"
          pac auth create --name "checkersetup" --url $env:environmenturl --applicationId $env:appid --clientSecret $env:clientsecret --tenant $env:tenantid --cloud public
          pac auth select --name "checkersetup"
          pac solution check --path $env:slnpath --geo "europe"

    # - name: import solution in build environment for validation
    #   uses: microsoft/powerplatform-actions/import-solution@0.4.0
    #   with:
    #     environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
    #     app-id: ${{env.CLIENT_ID}}
    #     client-secret: ${{ secrets.POWERPLAT_ALM_APP_SECRET }}
    #     tenant-id: ${{env.TENANT_ID}}
    #     solution-file: ${{ env.solution_outbound_folder}}/${{ env.solution_name }}.zip
    #     force-overwrite: true
    #     publish-changes: true